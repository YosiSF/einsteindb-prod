[package]
name = "tests"
version = "0.0.1"
edition = "2018"
publish = false

[[test]]
name = "failpoints"
path = "failpoints/mod.rs"
required-features = ["failpoints"]

[[test]]
name = "integrations"
path = "integrations/mod.rs"
required-features = ["testexport"]

[[bench]]
name = "violetabftstore"
harness = false
path = "benches/violetabftstore/mod.rs"

[[bench]]
name = "interlock_executors"
harness = false
path = "benches/interlock_executors/mod.rs"

[[bench]]
name = "hierarchy"
harness = false
path = "benches/hierarchy/mod.rs"

[[bench]]
name = "misc"
path = "benches/misc/mod.rs"
test = true

[[bench]]
name = "deadlock_detector"
harness = false
path = "benches/deadlock_detector/mod.rs"

[[bench]]
name = "channel"
path = "benches/channel/mod.rs"
test = true

[features]
default = ["failpoints", "testexport", "protobuf-codec"]
failpoints = ["fail/failpoints", "einsteindb-prod/failpoints"]
testexport = ["violetabftstore/testexport", "einsteindb-prod/testexport"]
profiling = ["profiler/profiling"]
protobuf-codec = [
  "grpcio/protobuf-codec",
  "ekvproto/protobuf-codec",
  "fidel_client/protobuf-codec",
  "violetabft/protobuf-codec",
  "violetabftstore/protobuf-codec",
  "einsteindb-prod/protobuf-codec",
  "milevadb_query_datatype/protobuf-codec",
  "fidelpb/protobuf-codec",
  "txn_types/protobuf-codec",
  "causet_context/protobuf-codec",
]
prost-codec = [
  "grpcio/prost-codec",
  "ekvproto/prost-codec",
  "fidel_client/prost-codec",
  "violetabft/prost-codec",
  "violetabftstore/prost-codec",
  "einsteindb-prod/prost-codec",
  "milevadb_query_datatype/prost-codec",
  "fidelpb/prost-codec",
  "txn_types/prost-codec",
  "causet_context/prost-codec",
]
jemalloc = ["einsteindb-prod/jemalloc"]
sse = ["einsteindb-prod/sse"]
porBlock = ["einsteindb-prod/porBlock"]

[deplightlikeencies]
fail = { version = "0.3", optional = true }
batch-system = { path = "../components/batch-system" }
crc64fast = "0.1"
crossbeam = "0.7.2"
configuration = { path = "../components/configuration" }
encryption = { path = "../components/encryption" }
causet_context = { path = "../components/causet_context" }
futures = "0.3"
grpcio = { version = "0.6", default-features = false, features = ["openssl-vlightlikeored"] }
hex = "0.4"
ekvproto = { git = "https://github.com/whtcorpsinc/ekvproto.git", default-features = false }
fidel_client = { path = "../components/fidel_client" }
protobuf = "2.8"
violetabft = { version = "0.6.0-alpha", default-features = false }
violetabftstore = { path = "../components/violetabftstore" }
rand = "0.7.3"
slog = { version = "2.3", features = ["max_level_trace", "release_max_level_debug"] }
slog-global = { version = "0.1", git = "https://github.com/breeswish/slog-global.git", rev = "0e23a5baff302a9d7bccd85f8f31e43339c2f2c1" }
tempfile = "3.0"
milevadb_query_datatype = { path = "../components/milevadb_query_datatype" }
milevadb_query_common = { path = "../components/milevadb_query_common" }
milevadb_query_normal_expr = { path = "../components/milevadb_query_normal_expr" }
milevadb_query_normal_executors = { path = "../components/milevadb_query_normal_executors" }
milevadb_query_vec_aggr = { path = "../components/milevadb_query_vec_aggr" }
milevadb_query_vec_executors = { path = "../components/milevadb_query_vec_executors" }
milevadb_query_vec_expr = { path = "../components/milevadb_query_vec_expr" }
einsteindb-prod = { path = "../", default-features = false }
einsteindb-prod_util = { path = "../components/einsteindb-prod_util" }
fidelpb = { git = "https://github.com/whtcorpsinc/fidelpb.git", default-features = false }
tokio-threadpool = "0.1.13"
toml = "0.4"
txn_types = { path = "../components/txn_types" }
uuid = { version = "0.8.1", features = ["serde", "v4"] }
time = "0.1"

[dev-deplightlikeencies]
# See https://bheisler.github.io/criterion.rs/book/user_guide/known_limitations.html for the usage
# of `real_blackbox` feature.
criterion = "0.3"
criterion-cpu-time = "0.1"
arrow = "0.10"
rand_xorshift = "0.2"
engine_lmdb = { path = "../components/engine_lmdb" }
engine_promises = { path = "../components/engine_promises" }
external_causetStorage = { path = "../components/external_causetStorage" }
hyper = { version = "0.13", default-features = false, features = ["runtime"] }
tuplespaceInstanton = { path = "../components/tuplespaceInstanton" }
profiler = { path = "../components/profiler" }
panic_hook = { path = "../components/panic_hook" }
security = { path = "../components/security" }
fidelpb_helper = { path = "../components/fidelpb_helper" }
milevadb_query_datatype = { path = "../components/milevadb_query_datatype" }
test_util = { path = "../components/test_util" }
test_causetStorage = { path = "../components/test_causetStorage" }
test_interlock = { path = "../components/test_interlock" }
test_sst_importer = { path = "../components/test_sst_importer" }
test_violetabftstore = { path = "../components/test_violetabftstore" }
test_fidel = { path = "../components/test_fidel" }
byteorder = "1.2"
serde_json = "1.0"
tokio = { version = "0.2", features = ["rt-threaded"] }
semver = "0.10"
concurrency_manager = { path = "../components/concurrency_manager" }

[target.'causet(target_os = "linux")'.dev-deplightlikeencies]
criterion-papi = "0.1"
