[package]
name = "backup"
version = "0.0.1"
edition = "2018"
publish = false

[[test]]
name = "integrations"
path = "tests/integrations/mod.rs"

[features]
default = ["protobuf-codec"]
protobuf-codec = [
  "engine_lmdb/protobuf-codec",
  "external_causetStorage/protobuf-codec",
  "grpcio/protobuf-codec",
  "tuplespaceInstanton/protobuf-codec",
  "ekvproto/protobuf-codec",
  "violetabft/protobuf-codec",
  "violetabftstore/protobuf-codec",
  "einsteindb/protobuf-codec",
  "txn_types/protobuf-codec",
]
prost-codec = [
  "engine_lmdb/prost-codec",
  "external_causetStorage/prost-codec",
  "grpcio/prost-codec",
  "tuplespaceInstanton/prost-codec",
  "ekvproto/prost-codec",
  "violetabft/prost-codec",
  "violetabftstore/prost-codec",
  "einsteindb/prost-codec",
  "txn_types/prost-codec",
]
tcmalloc = ["einsteindb/tcmalloc"]
jemalloc = ["einsteindb/jemalloc"]
mimalloc = ["einsteindb/mimalloc"]
portable = ["einsteindb/portable"]
sse = ["einsteindb/sse"]
mem-profiling = ["einsteindb/mem-profiling"]
failpoints = ["einsteindb/failpoints"]

[deplightlikeencies]
concurrency_manager = { path = "../concurrency_manager" }
configuration = { path = "../configuration" }
crc64fast = "0.1"
engine_lmdb = { path = "../engine_lmdb" }
engine_promises = { path = "../engine_promises" }
error_code = { path = "../error_code" }
external_causetStorage = { path = "../external_causetStorage" }
failure = "0.1"
futures = "0.3"
futures-util = { version = "0.3", default-features = false, features = ["io"] }
grpcio = { version = "0.6", default-features = false, features = ["openssl-vlightlikeored"] }
hex = "0.4"
tuplespaceInstanton = { path = "../tuplespaceInstanton" }
ekvproto = { git = "https://github.com/whtcorpsinc/ekvproto.git", default-features = false }
lazy_static = "1.3"
fidel_client = { path = "../fidel_client" }
prometheus = { version = "0.8", default-features = false, features = ["nightly", "push"] }
violetabft = { version = "0.6.0-alpha", default-features = false }
violetabftstore = { path = "../violetabftstore" }
security = { path = "../security" }
serde = "1.0"
serde_derive = "1.0"
slog = { version = "2.3", features = ["max_level_trace", "release_max_level_debug"] }
# better to not use slog-global, but pass in the logger
slog-global = { version = "0.1", git = "https://github.com/breeswish/slog-global.git", rev = "0e23a5baff302a9d7bccd85f8f31e43339c2f2c1" }
milevadb_query_common = { path = "../milevadb_query_common" }
einsteindb = { path = "../../", default-features = false }
einsteindb_alloc = { path = "../einsteindb_alloc" }
einsteindb_util = { path = "../einsteindb_util" }
txn_types = { path = "../txn_types" }

[deplightlikeencies.futures_01]
version = "0.1"
package = "futures"

[dev-deplightlikeencies]
futures-executor = "0.3"
rand = "0.7"
tempfile = "3.0"
test_util = { path = "../test_util" }
test_violetabftstore = { path = "../test_violetabftstore" }
uuid = { version = "0.8.1", features = ["serde", "v4"] }
